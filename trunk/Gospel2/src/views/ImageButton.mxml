<?xml version="1.0" encoding="utf-8"?>

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" mouseOver="group1_mouseOverHandler(event)"
			   xmlns:s="library://ns.adobe.com/flex/spark" mouseOut="group1_mouseOutHandler(event)" mouseUp="group1_mouseUpHandler(event)"
			   mouseDown="group1_mouseDownHandler(event)" useHandCursor="true" buttonMode="true"
			   xmlns:mx="library://ns.adobe.com/flex/halo" width="20" height="20">
	<s:states>
		<s:State name="normal"/>
		<s:State name="hover"/>
		<s:State name="select"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			import flash.events.MouseEvent;
			private var _selected:Boolean;

			public function set source(value:Object):void
			{
				icon.source = value;
			}

			public function get selected():Boolean
			{
				return _selected;
			}

			public function set selected(value:Boolean):void
			{
				_selected = value;
				currentState = value?"select":"normal";
			}

			protected function group1_mouseOverHandler(event:MouseEvent):void
			{
				if(!selected)currentState = "hover";
			}


			protected function group1_mouseOutHandler(event:MouseEvent):void
			{
				if(!selected)currentState = "normal";
			}


			protected function group1_mouseDownHandler(event:MouseEvent):void
			{
				if(!selected)currentState = "select";
			}
			
			protected function group1_mouseUpHandler(event:MouseEvent):void
			{
				if(!selected && toggled){
					currentState = "select";
					selected = true;
				}else{
					selected = false;
					currentState = "hover";
				}
				dispatchEvent(new Event(Event.CHANGE));
			}

		]]>
	</fx:Script>
	<fx:Metadata>
		[Event(type="flash.events.Event",name="change")]
	</fx:Metadata>
	<fx:Declarations>
		<fx:Boolean id="toggled">true</fx:Boolean>
	</fx:Declarations>
	<s:Rect width="100%" height="100%" visible.normal="false" radiusX="2" radiusY="2">
		<s:fill>
			<s:LinearGradient rotation="90" rotation.select="-90">
				<s:GradientEntry color="#64ddfa" ratio="0"/>
				<s:GradientEntry color="#1099df" ratio="1"/>
			</s:LinearGradient>
		</s:fill>
		<s:filters>
			<s:GlowFilter color="#FFFFFF" blurX="2" blurY="2" strength="2" quality="3"/>
			<s:GlowFilter color="#2ca2e9" blurX="2" blurY="2" strength="3" quality="3"/>
		</s:filters>
	</s:Rect>
	<s:BitmapImage verticalCenter="0" horizontalCenter="0" id="icon" />
</s:Group>
