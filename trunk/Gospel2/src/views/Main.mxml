<?xml version="1.0" encoding="utf-8"?>
<s:Window title="福音天使" xmlns:fx="http://ns.adobe.com/mxml/2009" showStatusBar="false" windowComplete="window1_windowCompleteHandler(event)" alwaysInFront="true"
		  xmlns:s="library://ns.adobe.com/flex/spark" systemChrome="{NativeWindowSystemChrome.NONE}" transparent="true"
		  xmlns:mx="library://ns.adobe.com/flex/halo" width="216" height="710" xmlns:local="*" backgroundColor="#2C72AD" backgroundAlpha="0" xmlns:views="views.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<local:DexterFramework id="df"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.display.NativeWindowResize;
			import flash.display.NativeWindowSystemChrome;
			import flash.display.Screen;
			import flash.events.Event;
			import flash.events.MouseEvent;
			
			import models.GospelModel;
			import models.LocalSetting;
			import models.vo.UserVO;
			
			import mx.collections.ArrayCollection;
			import mx.events.AIREvent;
			public static var instance:Main;
			[DexterBinding(model="userListController",property="userList")]
			[Bindable]
			public var userList:ArrayCollection;
			[DexterBinding]
			[Bindable]
			public var localSetting:LocalSetting;
			[DexterBinding]
			[Bindable]
			public var gospelModel:GospelModel;
			public static function show():void{
				if(!instance)instance = new Main();
				instance.addEventListener(Event.CLOSE,function(event:Event):void{instance = null;},false,0,true);
				instance.open();
			}
			[DexterEvent]
			public function trayClick():void{
				nativeWindow.activate();
			}
			[DexterEvent]
			public function getMainWindow():Main{
				return this;
			}
			protected function window1_windowCompleteHandler(event:AIREvent):void
			{
				if(localSetting.windowRect)
				nativeWindow.bounds = localSetting.windowRect;
			}
			[DexterEvent]
			public function selectMe(data:UserVO):void{
				list.selectedItem = data;
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				localSetting.windowRect = nativeWindow.bounds;
				sendDexterEvent("quit");
			}


			protected function settings_changeHandler(event:Event):void
			{
				var settingwindow:Setting = Setting.show();
				settingwindow.nativeWindow.x = Screen.mainScreen.bounds.width - width >> 1;
				settingwindow.nativeWindow.y = Screen.mainScreen.bounds.height - height >> 1;
			}

		]]>
	</fx:Script>
	<s:Group horizontalCenter="0" bottom="10" top="0" width="174">
		<s:List id="list" labelField="name" dataProvider="{userList}" itemRenderer="{new ClassFactory(localSetting.role > UserVO.GUEST? UserListItemAdmin:UserListItem)}" top="82" bottom="50" borderColor="#00A2FF" width="174" horizontalCenter="0"></s:List>
		<mx:Image source="assets/MainTop.png" mouseDown="nativeWindow.startMove()" horizontalCenter="0"/>
		<mx:Image source="assets/MainBottom.png" bottom="7" horizontalCenter="0"/>
		<s:Label y="37" text="{UserVO.self.name}" horizontalCenter="0" mouseEnabled="false" mouseChildren="false"/>
		<s:Label x="95" y="53" text="{gospelModel.selectedRoom.@name}" horizontalCenter="0" mouseEnabled="false" mouseChildren="false"/>
		<s:Border x="163" width="11" height="11" alpha="0" mouseDown="nativeWindow.startResize(NativeWindowResize.BOTTOM)" bottom="7">
		</s:Border>
		<views:ImageButton id="receiveVideo" change="localSetting.receiveVideo = receiveVideo.selected" selected="{localSetting.receiveVideo}" x="10" source="assets/television.png" bottom="20" toolTip="允许接受视频"/>
		<views:ImageButton id="settings" x="40" toggled="false" change="settings_changeHandler(event)" source="assets/cog.png" bottom="20" toolTip="系统设置"/>
		<views:ImageButton id="autoPopUpChat" change="localSetting.autoPopUpChat = autoPopUpChat.selected" selected="{localSetting.autoPopUpChat}" x="143" source="assets/application_cascade.png" bottom="20" toolTip="自动弹出聊天窗口"/>
		<s:Button skinClass="views.CloseButtonSkin" x="160" y="17" buttonMode="true" click="button1_clickHandler(event)"/>
	</s:Group>
</s:Window>
